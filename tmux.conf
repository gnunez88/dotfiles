################################################################################
################################## tmux.conf ###################################
################################################################################

# "setw" is a short for "set-window-option"
# Flags:
# -d	"detach"
# -g	"global"
# -n	"new"
# -r	"repeat"
# -s	"start"
# -t	"target"

# Setting the tmux version in a shell variable to compare for incompatibilities
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | awk '{ print $2 }')"

##### General settings ##### {{{1
# UTF-8 autodetected in version 2.2 onwards
# But there will be errors if explicity set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
    "\
        set -g utf8 on; \
        set -g status-utf8 on; \
        set -g mouse-utf8 on \
    "

# Using tmux with the current shell
set -g default-shell $SHELL

# Using 256-colour tmux if terminal supports it
# Set the default terminal based on $TERM (ChatGPT 4o)
if-shell "echo $TERM | grep -q 256color" \
  'set -g default-terminal "tmux-256color"' \
  'if-shell "echo $TERM | grep -q screen" \
    "set -g default-terminal screen" \
    "set -g default-terminal xterm"'

# Enable true-color for compatible terminals (ChatGPT 4o)
if-shell "echo $TERM | grep -q xterm-256color" \
  'set-option -ga terminal-overrides ",xterm-256color:Tc"'

# Decreasing the delay tmux has to execute a command (in milliseconds)
set -sg escape-time 500 # Time to wait for another key to be pressed.

# History limit
set-option -g history-limit 5000

# }}}1
##### Windows settings ##### {{{1
# Make tmux start the window's indeces from 1 instead of 0
set -g base-index 1
# Identifying activity in other windows
set-window-option -g monitor-activity on
set-option -g visual-activity on
# }}}1
##### Panes settings ##### {{{1
# Make tmux start the pane's indeces from 1 instead of 0
set -g pane-base-index 1
# }}}1
##### Mouse ##### {{{1
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
    "\
        set -g mouse on \
    "
# }}}1
##### Bindings ##### {{{1

##### Prefix ##### {{{2
# Change the default configuration key binding
# NOTE: I use Spanish keyboard layout with variant Dvorak
unbind C-b
set-option -g prefix C-t
# There's the possibility to bind a second prefix
#set-option -g prefix2 C-n
# Other applications can use the same prefix by hitting them twice
bind-key C-t send-prefix
# }}}2
#### Splitting #### {{{2
# Split panes using "|" and "_"; also keep the current working directory
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
# Unbind previous commands
unbind-key '"'
unbind-key '%'
# }}}2
#### Resizing panes with vim keys #### {{{2
# The "-r" option allow to repeat the command without hitting the prefix
# after a certain time (indicated in 'escape-time', default: 500ms)
bind-key -r H resize-pane -L 1
bind-key -r L resize-pane -R 1
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
# }}}2
#### Clipboard #### {{{2
# Linux: to use this feature "xclip" must be installed.
run-shell "tmux setenv -g TMUX_XCLIP $(which xclip)"
#if-shell -b '[ "$TMUX_XCLIP"[1] = "/" ]' \
#    "\
#        # Copy the content of the current pane to the system clipboard \
#        bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
#        # Copy the content of the system clipboard to the current buffer \
#        bind c-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; \
#        tmux paste-buffer \
#    "
# }}}2
#### Vim style #### {{{2
# Configure the navigation as in vim
set-window-option -g mode-keys vi
# Use vim commands in the status mode
set-option -g status-keys vi

# Switch panels using vim keys
bind-key k select-pane -U # switch panel to Up
bind-key j select-pane -D # switch panel to Down
bind-key h select-pane -L # switch panel to Left
bind-key l select-pane -R # switch panel to Right

# Swapping panes
bind-key C-k swap-pane -U # move pane up
bind-key C-j swap-pane -D # move pane down

### copy-mode ### {{{3
# Acces copy-mode with <Esc> key
unbind-key '['
bind-key 'Escape' copy-mode
# Paste (last) buffer with 'p'
unbind-key 'p'
bind-key 'p' paste-buffer

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
    "\
        bind-key -t     vi-copy     'v'     begin-selection; \
        bind-key -t     vi-copy     'V'     select-line; \
        bind-key -t     vi-copy     'C-v'   rectangle-toggle; \
        bind-key -t     vi-copy     'Y'     copy-pipe \
             'xclip -selection clipboard -in'; \
        bind-key -t     vi-copy     'y'     copy-selection; \
        bind-key -t     vi-copy     'H'     back-to-indentation; \
        bind-key -t     vi-copy     'L'     end-of-line; \
        bind-key -t     vi-copy     'C-k'   top-line; \
        bind-key -t     vi-copy     'C-j'   bottom-line; \
        bind-key -rt    vi-copy     'K'     scroll-up; \
        bind-key -rt    vi-copy     'J'     scroll-down; \
        bind-key -rt    vi-choice   'K'     scroll-up; \
        bind-key -rt    vi-choice   'J'     scroll-down; \
        bind-key -t     vi-choice   'C-k'   top-line; \
        bind-key -t     vi-choice   'C-j'   bottom-line; \
        bind-key -t     vi-edit     'C-p'   history-up; \
        bind-key -t     vi-edit     'C-n'   history-down; \
        bind-key -ct    vi-edit     'C-p'   history-up; \
        bind-key -ct    vi-edit     'C-n'   history-down; \
        bind-key -ct    vi-edit     'H'     start-of-line; \
        bind-key -ct    vi-edit     'L'     end-of-line; \
    "
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    "\
        bind-key -T     copy-mode-vi    'v'     send -X begin-selection; \
        bind-key -T     copy-mode-vi    'V'     send -X select-line; \
        bind-key -T     copy-mode-vi    'C-v'   send -X rectangle-toggle; \
        bind-key -T     copy-mode-vi    'Y'     send -X copy-pipe-and-cancel \
            'xclip -selection clipboard -in'; \
        bind-key -T     copy-mode-vi    'y'     send -X copy-selection; \
        bind-key -T     copy-mode-vi    'H'     send -X back-to-indentation; \
        bind-key -T     copy-mode-vi    'L'     send -X end-of-line; \
        bind-key -T     copy-mode-vi    'C-k'   send -X top-line; \
        bind-key -T     copy-mode-vi    'C-j'   send -X bottom-line; \
        bind-key -T     copy-mode-vi    'J'     send -X scroll-down; \
        bind-key -T     copy-mode-vi    'K'     send -X scroll-up; \
    "

# }}}3

# }}}2
#### Shortcuts #### {{{2
#run-shell "tmux setenv -g TMUX_SOURCE ~/.tmux.conf"
#bind-key s source-file "$TMUX_SOURCE" \; display "\"$TMUX_SOURCE\" reloaded"
bind-key s source-file ~/.tmux.conf \; display "\"~/.tmux.conf\" reloaded"
# }}}2

# }}}1
##### Status bar ##### {{{1
# Interval updating for the status bar (in seconds)
set-option -g status-interval 10
set-option -g status-justify centre
#### Left side #### {{{2
set-option -g status-left-length 40
set-option -g status-left \
"#[fg=orange]Host: #h #[fg=green]Session: #S:#[fg=yellow]#I.#[fg=cyan]#P"
# }}}2
#### Right side #### {{{2
set-option -g status-right "#[bg=cyan]#[fg=black]%d/%m/%Y %H:%M:%S "
# }}}2
# }}}1
##### Colours ##### {{{1
# Custom colours in tmux:
# black, blue, cyan, green, magenta, red, white, yellow

#### Status bar #### {{{2
#### Foreground and Background ### {{{3
set-option -g status-fg white
set-option -g status-bg black
## }}}3
#### Window list ### {{{3
#set-window-option -g window-status-fg cyan
#set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
## }}}3
#### Command line ### {{{3
#set-option -g message-fg white
#set-option -g message-bg red
#set-option -g message-attr bright
## }}}3
## }}}2
##### Stand out current window #### {{{2
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg red
#set-window-option -g window-status-current-attr bright
## }}}2
##### Pane border #### {{{2
#set-option -g pane-border-fg blue
#set-option -g pane-border-bg default
### Active pane border
#set-option -g pane-active-border-fg cyan
#set-option -g pane-active-border-bg default
# }}}2

# }}}1

##### Plugins ##### {{{1
# Setting the tmux plugin's directory
run-shell "tmux setenv -g TMUX_PLUGINS ~/.tmux/plugins"

# #### tmux-open #### {{{2
# # Bindings
# # 'o'         Open selected file with default file opener.
# # 'C-o'       Open selected file with $EDITOR.
# # 'S-s'       Look for selecte text in web browser and search engine.
# # Loading tmux-open plugin
# if-shell -b '[ -r "$TMUX_PLUGINS/tmux-open/open.tmux" ]' \
#     "\
#         run-shell $TMUX_PLUGINS/tmux-open/open.tmux; \
#         set -g @open 'O'; \
#         set -g @open-D 'https://www.duckduckgo.com/'; \
#         set -g @open-G 'https://www.google.com/search?q='; \
#         set -g @open-B 'https://www.bing.com/search?q='; \
#     "
# # }}}2
# #### tmux-powerline-theme #### {{{2
# if-shell '[ -r "$TMUX_PLUGINS/tmux-powerline-theme/powerline-theme.tmux" ]' \
#     "\
#     run-shell "$TMUX_PLUGINS/tmux-powerline-theme/powerline-theme.tmux" \
#     if-shell ' ${TMUX_POWERLINE_SYMBOLS?}' '' \
#         'set-environment -g TMUX_POWERLINE_SYMBOLS "powerline"' \
#     bind-key P if-shell 'test $(echo "${TMUX_POWERLINE_SYMBOLS}") = "unicode"' \
#         'set-environment -g TMUX_POWERLINE_SYMBOLS "powerline"; \
#         run-shell "$TMUX_PLUGINS/tmux-powerline-theme/powerline-theme.tmux"' \
#         'set-environment -g TMUX_POWERLINE_SYMBOLS "unicode";
#         run-shell "$TMUX_PLUGINS/tmux-powerline-theme/powerline-theme.tmux"' \
#     "
# # }}}2
# #### tmux-sidebar #### {{{2
# # Bindings
# # 'prefix + Tab'          Toggle sidebar with a directory tree.
# # 'prefix + Backspace'    Toggle sidebar and move cursor to it (focus it).
# # Loading tmux-sidebar plugin
# if-shell -b '[ -r "$TMUX_PLUGINS/tmux-sidebar/sidebar.tmux" ]' \
#     "\
#         run-shell $TMUX_PLUGINS/tmux-sidebar/sidebar.tmux; \
#     "
# # }}}2
# }}}1
